package base;
import java.time.LocalDate;  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º LocalDate
import java.util.*;

// üìå –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å "Animal" (–ñ–∏–≤–æ—Ç–Ω–æ–µ)
public abstract class Animal {
    private String name;         // –ò–º—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    private LocalDate birthDate; // –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ —Ç–µ–ø–µ—Ä—å LocalDate
    private static int count = 0;  // –û–±—â–∏–π —Å—á—ë—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö
    private Map<String, Runnable> commandsMap = new HashMap<>(); // –°–ª–æ–≤–∞—Ä—å –∫–æ–º–∞–Ω–¥ —Å –∏—Ö –¥–µ–π—Å—Ç–≤–∏—è–º–∏

    // üìÖ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å LocalDate –¥–ª—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    public Animal(String name, LocalDate birthDate) {
        this.name = name;
        this.birthDate = birthDate;
        count++;
    }

    private String getType() {
        return "The " + this.getClass().getSimpleName().toLowerCase();
    }

    @Override
    public String toString() {
        return this.getType() + " " + this.name + " (borned: " + birthDate + ")";
    }

    // üìö –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    public void learnCommand(String command, Runnable action) {
        if (!commandsMap.containsKey(command)) {
            commandsMap.put(command, action);
            System.out.println(this + " learned a new command: " + command);
        } else {
            System.out.println(this + " already knows the command: " + command);
        }
    }

    // üìú –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
    public void showCommands() {
        if (commandsMap.isEmpty()) {
            System.out.println(this + " doesn't know any commands yet.");
        } else {
            System.out.println(this + " knows the following commands: " + commandsMap.keySet());
        }
    }

    // üîÑ –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    public void executeCommand(String command) {
        System.out.println("Trying to execute command: " + command);
        if (commandsMap.containsKey(command)) {
            // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
            System.out.println("Executing command: " + command);
            commandsMap.get(command).run();
        } else {
            // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            System.out.println(this + " doesn't know the command: " + command);
        }
    }

    // üìÖ –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    public LocalDate getBirthDate() {
        return this.birthDate;
    }

    // üî¢ –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö
    public static int getTotalCount() {
        return count;
    }
}
